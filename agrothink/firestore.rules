rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to create their account
    match /users/{userId} {
      // Users can create their own document.
      allow create: if request.auth.uid == userId;

      // Users can read and update their own data.
      allow get, update: if request.auth.uid == userId;
      
      // A user can delete their own account.
      allow delete: if request.auth.uid == userId;
      
      // Government users can list, get, update, and delete any user.
      allow list, get, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isGovernment == true;
    }
    
    // Allow users to manage their own saved planting guides
    match /saved_guides/{guideId} {
      // A user can read a guide if they are the owner. This works for queries.
      allow read: if request.auth.uid == resource.data.userId;

      // A user can create a guide for themselves.
      allow create: if request.auth.uid == request.resource.data.userId;

      // A user can update their own guide, but cannot change the owner.
      allow update: if request.auth.uid == resource.data.userId && request.resource.data.userId == resource.data.userId;

      // A user can delete their own guide.
      allow delete: if request.auth.uid == resource.data.userId;
    }

    // Rules for news articles
    match /news/{newsId} {
      // Any authenticated user can get a single article or list the collection.
      allow get, list: if request.auth != null;
      
      // A user can create news if they are a government user.
      allow create: if request.auth != null 
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isGovernment == true;

      // A user can update/delete news if they are a government user.
      allow update, delete: if request.auth != null 
                            && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isGovernment == true;
    }

    // Rules for user's to-do items
    match /todos/{todoId} {
      // A user can read, update, and delete their own to-do items.
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      
      // A user can create a to-do item for themselves.
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    // Rules for chatbot messages
    match /chat_messages/{messageId} {
      // A user can read or delete their own messages.
      // The 'list' permission, part of 'read', allows queries.
      // Firestore ensures that any query on this collection will only return 
      // documents where `userId` matches the logged-in user's ID.
      allow read, delete: if request.auth.uid == resource.data.userId;

      // A user can create a message for themselves.
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    match /app_settings/{settingId} {
      // Allow any authenticated user to read app settings
      allow read: if request.auth != null;
      // Allow only government users to write app settings
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isGovernment == true;
    }

    // Rules for other collections can be added as your app grows
    
    // Default rule - deny everything not explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }
  }
}